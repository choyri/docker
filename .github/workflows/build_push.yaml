name: Build and push image

on:
  push:
    tags:
      - '*-*'

jobs:
  main:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Version
        run: |
          # common
          version=${GITHUB_REF#*-}
          [ "${version##*-}" == 'dev' ] && dev=true
          echo "VERSION=${version}" >> $GITHUB_ENV

          # nginx
          echo "NGINX_BASE_IMAGE_TAG=${version}-alpine" >> $GITHUB_ENV

          # php
          echo "PHP_DEV=${dev}" >> $GITHUB_ENV
          php_version=${version%%-*}
          echo "PHP_BASE_IMAGE_TAG=${php_version}-fpm-alpine" >> $GITHUB_ENV
          [ -n "${dev}" ] && php_tag_suffix='-dev'
          echo "PHP_IMAGE_TAGS<<EOF" >> $GITHUB_ENV
          echo "choyri/php:${php_version}${php_tag_suffix}" >> $GITHUB_ENV
          [[ $version == 8* ]] && echo "choyri/php:latest${php_tag_suffix}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: '[nginx] Build and push'
        if: ${{ contains(github.ref, 'nginx') && success() }}
        uses: docker/build-push-action@v2
        with:
          context: ./nginx
          push: true
          platforms: |
            linux/amd64
            linux/arm64/v8
            linux/arm/v7
          build-args: |
            BASE_IMAGE_TAG=${{ env.NGINX_BASE_IMAGE_TAG }}
          tags: |
            choyri/nginx:${{ env.VERSION }}
            choyri/nginx:latest

      - name: '[php] Build and push'
        if: ${{ contains(github.ref, 'php') && success() }}
        uses: docker/build-push-action@v2
        with:
          context: ./php
          push: true
          platforms: |
            linux/amd64
            linux/arm64/v8
            linux/arm/v7
          build-args: |
            BASE_IMAGE_TAG=${{ env.PHP_BASE_IMAGE_TAG }}
            DEV=${{ env.PHP_DEV }}
          labels: |
            version=${{ env.VERSION }}
          tags: ${{ env.PHP_IMAGE_TAGS }}

      - name: '[rabbitmq] Build and push'
        if: ${{ contains(github.ref, 'rabbitmq') && success() }}
        uses: docker/build-push-action@v2
        with:
          context: ./rabbitmq
          push: true
          platforms: |
            linux/amd64
            linux/arm64/v8
            linux/arm/v7
          build-args: |
            VERSION=${{ env.VERSION }}
          tags: |
            choyri/rabbitmq:${{ env.VERSION }}
            choyri/rabbitmq:latest
